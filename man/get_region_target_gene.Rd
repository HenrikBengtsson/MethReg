% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_region_target_gene.R
\name{get_region_target_gene}
\alias{get_region_target_gene}
\title{Obtain target genes of regions with 3 methods: 1) closest gene
2) genes within a fixed window 3) fixed number of nearby genes (upstream/downstream)}
\usage{
get_region_target_gene(
  regions.gr,
  genome = c("hg38", "hg19"),
  method = c("closest.gene", "window", "nearest.genes"),
  window.size = 500 * 10^3,
  num.flanking.genes = 5,
  rm.promoter.regions.from.distal.linking = TRUE
)
}
\arguments{
\item{regions.gr}{A Genomic Ranges object (GRanges) or a
SummarizedExperiment object (rowRanges will be used)}

\item{genome}{Human genome of reference "hg38" or "hg19"}

\item{method}{How genes are mapped to regions: closest gene promoter to the region ("closest.gene"); or
genes within a window around the region ("window"); or a fixed number genes upstream
and downstream of the region "nearest.genes"}

\item{window.size}{When \code{method = "window"}, number of base pairs to extend the region (+- window.size/2).
Default is 500kbp (or +/- 250kbp, i.e. 250k bp from start or end of the region)}

\item{num.flanking.genes}{Number of flanking genes upstream and downstream to search.
For example, if num.flanking.genes = 5, it will return the 5 genes upstream
and 5 genes dowstream of the given region.}

\item{rm.promoter.regions.from.distal.linking}{When performing distal linking
with methods one of the methods "windows" and "nearest.genes" if set to TRUE (default)
it will remove promoter regions from the input region.}
}
\value{
A data frame with the following information: regionID, Target symbol, Target ensembl ID
}
\description{
To map genes to a region there are two options: 1) closest gene
2) map to all genes within a window around the region (default window.size = 500kbp
(i.e. +/- 250kbp from start or end of the region)).
}
\examples{
library(GenomicRanges)
library(dplyr)

# Create example region
regions.gr <- data.frame(
       chrom = c("chr22", "chr22", "chr22", "chr22", "chr22"),
       start = c("39377790", "50987294", "19746156", "42470063", "43817258"),
       end   = c("39377930", "50987527", "19746368", "42470223", "43817384"),
       stringsAsFactors = FALSE)  \%>\%
     makeGRangesFromDataFrame

 # map to closest gene
 region.closest <- get_region_target_gene(
                      regions.gr = regions.gr,
                      genome = "hg19",
                      method = "closest.gene")

 # map to all gene within region +- 250kbp
 region.window <- get_region_target_gene(
                      regions.gr = regions.gr,
                      genome = "hg19",
                      method = "window",
                      window.size = 500 * 10^3)

 # map regions to n upstream and n dowstream genes
 region.nearest <- get_region_target_gene(
                      regions.gr = regions.gr,
                      genome = "hg19",
                      method = "nearest.genes",
                      num.flanking.genes = 5)
}
