% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_region_target_gene.R
\name{get_region_target_gene}
\alias{get_region_target_gene}
\title{Obtain target genes that are close to input regions}
\usage{
get_region_target_gene(
  regions.gr,
  genome = c("hg38", "hg19"),
  method = c("closest.gene", "window"),
  window.width = 5e+05
)
}
\arguments{
\item{regions.gr}{A Genomic Ranges object (GRanges)}

\item{genome}{Human genome of reference "hg38" or "hg19"}

\item{method}{How genes are mapped to regions: closest gene promoter to the region ("closest.gene"); or
genes within a window around the region ("window").}

\item{window.width}{When \code{method = "window"}, number of base pairs to extend the region (+- window.width/2).
Default is 500kbp (or +/- 250kbp, i.e. 250k bp from start or end of the region)}
}
\description{
To map genes to a region there are two options: 1) closest gene
2) map to all genes within a window around the region (default window.width = 500kbp
(i.e. +/- 250kbp from start or end of the region)).
}
\examples{
library(GenomicRanges)
library(dplyr)

# Create example region
regions.gr <- data.frame(
              chrom = c("chr22", "chr22", "chr22", "chr22", "chr22"),
              start = c("39377790", "50987294", "19746156", "42470063", "43817258"),
              end   = c("39377930", "50987527", "19746368", "42470223", "43817384"),
              stringsAsFactors = FALSE)  \%>\%
     makeGRangesFromDataFrame

 # map to closest gene
 region.closest <- get_region_target_gene(
                      regions.gr = regions.gr,
                      genome = "hg19",
                      method = "closest.gene")

 # map to all gene within region +- 250kbp
 region.window <- get_region_target_gene(
                      regions.gr = regions.gr,
                      genome = "hg19",
                      method = "window")
}
