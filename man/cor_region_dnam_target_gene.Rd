% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getDNAm.target.R
\name{cor_region_dnam_target_gene}
\alias{cor_region_dnam_target_gene}
\title{Evaluate correlation of region and gene}
\usage{
cor_region_dnam_target_gene(
  links,
  met,
  exp,
  min.cor.pval = 0.05,
  min.cor.estimate = 0,
  file.out
)
}
\arguments{
\item{met}{DNA methylation matrix (rows are regions and columns are samples). Samples should be in the
same order as gene expression.}

\item{exp}{Gene expression matrix (rows are genes, columns are samples)
Samples should be in the same order as the DNA methylation matrix.}

\item{min.cor.pval}{Filter of significant correlations (default: 0.05)}

\item{min.cor.estimate}{Filter of significant correlations (default: not applied)}

\item{file.out}{A csv file name that if provied will be used to save the results.}

\item{links.df}{A dataframe with the following columns: region ID and gene ID}
}
\description{
Evaluate correlation of region and gene using spearman test
}
\examples{
# Create example region
regions.gr <- data.frame(
 chrom = c("chr22", "chr22", "chr22", "chr22", "chr22"),
  start = c("39377790", "50987294", "19746156", "42470063", "43817258"),
  end   = c("39377930", "50987527", "19746368", "42470223", "43817384"),
                         stringsAsFactors = FALSE)  \%>\%
                         makeGRangesFromDataFrame
# Map example region to closest gene
map <- getDNAm.target(regions.gr = regions.gr, genome = "hg19", method = "closest.gene")
map <- unite(map,col = "regionID",c("region_chrom", "region_start", "region_end" ))
links <- tibble::tibble(regionID = map$regionID, geneID = map$ensembl_gene_id)

# Create data example
met <- matrix(rep(0,length(links$regionID) * 4),
              nrow = length(links$regionID),
              dimnames = list(c(links$regionID),c(paste0("S",c(1:4)))))

exp <- matrix(rep(0,length(links$geneID) * 4),
              nrow = length(links$geneID),
              dimnames = list(c(links$geneID),c(paste0("S",c(1:4)))))
# Correalted DNAm and gene expression
cor_region_dnam_target_gene(links = links, met = met, exp = exp)
}
