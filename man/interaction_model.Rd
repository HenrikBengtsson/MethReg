% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interaction_model.R
\name{interaction_model}
\alias{interaction_model}
\title{Fits linear models with interaction to triplet data (Target, TF, DNAm), where DNAm
can be a continuous variable (for all samples) or a binary variable (samples in Q1 or Q4)}
\usage{
interaction_model(triplet, dnam, exp, cores = 1)
}
\arguments{
\item{triplet}{Data frame with columns for DNA methylation region (regionID), TF  (TF), and target gene  (target)}

\item{dnam}{DNA methylation matrix  (columns: samples in the same order as \code{exp} matrix, rows: regions/probes)}

\item{exp}{A log2 (gene expression count + 1) matrix (columns: samples in the same order as \code{dnam} matrix,
rows: genes represented by ensembl IDs (e.g. ENSG00000239415))}

\item{cores}{Number of CPU cores to be used. Default 1.}
}
\value{
A dataframe with \code{Region, TF, target, TF_symbo, target_symbol, estimates and P-values},
after fitting robust linear models or zero-inflated negative binomial models (see Details above).

Model 1 (considering DNAm values as a continuous variable) generates \code{pval_met}, \code{pval_rna.tf},
\code{pval_met.rna.tf} and \code{estimates_met}, \code{estimates_rna.tf}, \code{estimates_met.rna.tf}.

Model 2 (considering DNAm values as a binary variable) generates \code{quant_pval_metGrp},
\code{quant_pval_rna.tf}, \code{quant_pval_metGrp.rna.tf},
\code{quant_estimates_metGrp}, \code{quant_estimates_rna.tf}, \code{quant_estimates_metGrp.rna.tf}.

\code{Model.interaction} indicates which model (robust linear model or zero inflated model)
was used to fit Model 1, and \code{Model.quantile} indicates which model(robust linear model or zero
inflated model) was used to fit Model 2.

\code{Max_interaction_pval} is the max(quant_estimate_metGrp:rna.tf, pval_met:rna.tf).
}
\description{
Evaluates regulatory potential of DNA methylation (DNAm) on gene expression,
by fitting robust linear model or zero inflated negative binomial model to triplet data.
These models consist of terms to model direct effect of DNAm on target gene expression,
direct effect of TF on gene expression, as well as an interaction term that evaluates
the synergistic effect of DNAm and TF on gene expression.
}
\details{
This function fits the linear model

\code{log2(RNA target) ~ log2(TF) + DNAm + log2(TF) * DNAm}

to triplet data in two ways:

Model 1 : by considering \code{DNAm} as a continuous variable

Model 2:  by considering \code{DNAm} as a binary variable - we defined a binary group for
DNA methylation values (high = 1, low = 0). That is, samples with the highest
DNAm levels (top 25 percent) has high = 1, samples with lowest
DNAm levels (bottom 25 percent) has high = 0. Note that in this
implementation, only samples with DNAm values in the first and last quartiles
are considered.

In these models, the term \code{log2(TF)} evaluates direct effect of TF on
target gene expression, \code{DNAm} evaluates direct effect of DNAm on target
gene expression, and \code{log2(TF)*DNAm} evaluates synergistic effect of DNAm
and TF, that is, if TF regulatory activity is modified by DNAm.

There are two implementations of these models, depending on whether there are an excessive
amount (i.e. more than 25 percent) of samples with zero counts in RNAseq data:

\itemize{
\item When percent of zeros in RNAseq data is less than
25 percent, robust linear models are implemented using \code{rlm} function from \code{MASS} package. This
gives outlier gene expression values reduced weight. We used \code{"psi.bisqure"}
option in function \code{rlm} (bisquare weighting,
https://stats.idre.ucla.edu/r/dae/robust-regression/).

\item When percent of zeros in RNAseq data is more than 25 percent, zero inflated negative binomial models
are implemented using \code{zeroinfl} function from \code{pscl} package. This assumes there are
two processes that generated zeros (1) one where the counts are always zero
(2) another where the count follows a negative binomial distribution.
}

To account for confounding effects from covariate variables, first use the \code{get_residuals} function to obtain
RNA or DNAm residual values which have covariate effects removed, then fit interaction model. Note that no
log2 transformation is needed when \code{interaction_model} is applied to residuals data.
}
\examples{
library(dplyr)
dnam <- runif(20,min = 0,max = 1) \%>\%
  matrix(ncol = 1) \%>\%  t
rownames(dnam) <- c("chr3:203727581-203728580")
colnames(dnam) <- paste0("Samples",1:20)

exp.target <-  runif(20,min = 0,max = 10) \%>\%
  matrix(ncol = 1) \%>\%  t
rownames(exp.target) <- c("ENSG00000232886")
colnames(exp.target) <- paste0("Samples",1:20)

exp.tf <- runif(20,min = 0,max = 10) \%>\%
  matrix(ncol = 1) \%>\%  t
rownames(exp.tf) <- c("ENSG00000232888")
colnames(exp.tf) <- paste0("Samples",1:20)

exp <- rbind(exp.tf, exp.target)

triplet <- data.frame(
   "regionID" =  c("chr3:203727581-203728580"),
   "target" = "ENSG00000232886",
   "TF" = "ENSG00000232888"
)
results <- interaction_model(triplet, dnam, exp)

\dontrun{
data("dna.met.chr21")
dna.met.chr21 <- make_se_from_dnam_probes(dna.met.chr21)
data("gene.exp.chr21.log2")
triplet <- data.frame("regionID" = rownames(dna.met.chr21)[1:10],
                      "TF" = rownames(gene.exp.chr21.log2)[11:20],
                      "target" = rownames(gene.exp.chr21.log2)[1:10])
results <- interaction_model(triplet, dna.met.chr21, gene.exp.chr21.log2)

# select those that are significant in both models
# results <- results[results$`pval_met:rna.tf`< 0.05 & results$`quant_pval_metGrp:rna.tf`< 0.05 ,]
}
}
