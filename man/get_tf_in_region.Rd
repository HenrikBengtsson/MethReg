% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_tf_in_region_hocomoco.R
\name{get_tf_in_region}
\alias{get_tf_in_region}
\title{Get human TF list for a region using HOCOMOCO prediction}
\usage{
get_tf_in_region(
  region,
  genome = c("hg19", "hg38"),
  arrayType = c("450k", "EPIC"),
  classification = c("subfamily", "family")
)
}
\arguments{
\item{region}{Region to map. Either a Granges or a named vertor}

\item{genome}{Human genome of reference "hg38" or "hg19"}

\item{arrayType}{DNA methylation array "450k" or "EPIC"}

\item{classification}{TF classification to be used.
Either "subfamily" or "family".}
}
\value{
A dataframe with region, a TF name and TF gene ensembl ID
}
\description{
This function uses a pre-computed dataset for EPIC and HM450 Array that was created as follow:
For each HOCOMOCO human TF, the motif was search around the probe (+-250bp), and a binary matrix was created, with 1
if the motif was found, 0 if not. This function uses this pre-computed dataset to extend the probes to region, using the overlap probes
overlapping the regions as follows: for each region, get the probes within it and a motif will be one if at least one of the
overlapping probes has the motif (value 1 in the original dataset).
Then for each TF motifs found within the region, we select the TFs within the same TF family/subfamily since they
have similar binding motifs.
}
\examples{
\dontrun{
 regions.names <- c("chr1:60591-79592","chr4:40162197-43162198")
 region.tf <- get_tf_in_region(regions.names,
                 genome = "hg19",
                 arrayType = "450k",
                 classification = "subfamily")

 regions.gr <- make_granges_from_names(regions.names)
 region.tf <- get_tf_in_region(regions.gr,
                 genome = "hg38",
                 arrayType = "450k",
                 classification = "family")
}
}
