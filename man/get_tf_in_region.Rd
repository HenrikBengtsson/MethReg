% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_tf_in_region_hocomoco.R
\name{get_tf_in_region}
\alias{get_tf_in_region}
\title{Get human TF list for a region using JASPAR 2018 database and motifmatchr}
\usage{
get_tf_in_region(
  region.gr,
  window.size = 0,
  genome = c("hg19", "hg38"),
  p.cutoff = 1e-08,
  cores = 1
)
}
\arguments{
\item{window.size}{Integer value to extend the regions. For example, a value of 50 will
extend 50 bp upstream and 50 downstream the region. Default is no increase}

\item{genome}{Human genome of reference "hg38" or "hg19"}

\item{p.cutoff}{Motifmatcher p.cutoff. Default 1e-8.}

\item{cores}{Number of CPU cores to be used. Default 1.}

\item{region}{A GRanges object with the DNA methylation regions to be scanned for the motifs}
}
\description{
Given a genomic region, this function obtains TFs within it using a motif search.
To this end, we use  a pre-computed dataset for EPIC and HM450 Array that was created as follows:
each JASPAR 2018 human TF motif is searched within region and a binary matrix is created,
with 1 if the motif was found, 0 if not.
}
\examples{
\dontrun{
 regions.names <- c("chr1:79502-79592","chr4:43162098-43162198")
 regions.gr <- make_granges_from_names(regions.names)
 region.tf <- get_tf_in_region(
                 regions.gr,
                 genome = "hg38"
 )
 regions.names <- c("chr1:79592-79592","chr4:43162198-43162198")
 regions.gr <- make_granges_from_names(regions.names)
 region.tf <- get_tf_in_region(
                 regions.gr,
                 window.size = 25,
                 genome = "hg38"
 )
}
}
